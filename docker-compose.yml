version: "3.9"

services:
  db:
    image: postgres:12-alpine
    container_name: "splid_postgres_db"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - fullstack
    volumes:
      - database_postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 10

  migrate:
    image: migrate/migrate:v4.16.2
    container_name: "golang_migrate"
    volumes:
      - ./migrations:/migrations
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@db:5432/${POSTGRES_DB}?sslmode=disable",
      ]
    command: [ "up" ]
    networks:
      - fullstack
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  api:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: "splid_app"
    ports:
      - "8080:8080"
    env_file:
      - .env.dev
    volumes:
      - ./:/app
    networks:
      - fullstack
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    init: true # to stop the container quickly

volumes:
  database_postgres:

networks:
  fullstack:
    driver: bridge